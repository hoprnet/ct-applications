apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: economic-handler
  namespace: staging
spec:
  project: staging
  source:
    repoURL: https://dysnix.github.io/charts
    targetRevision: 0.99.16
    chart: app
    plugin:
      env:
        - name: HELM_VALUES
          value: |
            app:
              name: economic-handler
            image:
              repository: europe-west6-docker.pkg.dev/ctdapp-391309/ctdapp/cover-traffic
              tag: "9433083"
            replicaCount: 1
            args: 
              - python
              - '-m'
              - economic_handler
            env:
              MOCK_MODE: '0'
              PGSSLCERT: "/etc/postgres/certs/tls.crt"
              PGSSLKEY: "/etc/postgres/certs/tls.key"
              PGSSLROOTCERT: "/etc/postgres/certs/ca.crt"
              PGSSLMODE: verify-ca
              TASK_NAME: fake_task
            envFrom:
              - secretRef:
                  name: postgres-credentials
              - secretRef:
                  name: rabbitmq
              - secretRef:
                  name: hopr-5
              - secretRef:
                  name: subgraph
              - secretRef:
                  name: rpch
            extraVolumeMounts:
              - name: postgres-certs
                mountPath: "/etc/postgres/certs"
            extraVolumes:
              - name: tmp-postgres-certs
                secret:
                  secretName: postgres-certs
              - name: postgres-certs
                emptyDir: {}
            extraInitContainers:
              - name: init
                image: busybox
                command:
                  - /bin/sh
                  - '-c'
                  - cp /tmp/tmp-certs/* /tmp/certs && chmod 0400 /tmp/certs/* && chown 1001:1001 /tmp/certs/*
                securityContext:
                  runAsNonRoot: false
                  runAsUser: 0
                volumeMounts:
                  - name: postgres-certs
                    mountPath: "/tmp/certs"
                  - name: tmp-postgres-certs
                    mountPath: "/tmp/tmp-certs"
            serviceAccount:
              annotations:
                iam.gke.io/gcp-service-account: ARGOCD_ENV_CLUSTER_NAME-ct@ARGOCD_ENV_GOOGLE_PROJECT.iam.gserviceaccount.com
            service:
              type: ClusterIP
              ports:
                http: 8080
  destination:
    server: https://kubernetes.default.svc
    namespace: staging
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - CreateNamespace=true
      - PruneLast=true
      
