apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ct-core
  namespace: staging
spec:
  project: staging
  source:
    repoURL: https://dysnix.github.io/charts
    targetRevision: 0.99.16
    chart: app
    helm:
      values: |
        app:
          name: ct-core
        image:
          repository: europe-west6-docker.pkg.dev/ctdapp-391309/ctdapp/cover-traffic
          tag: "dd0f0fe"
          pullPolicy: Always
        replicaCount: 0
        containerSecurityContext:
          enabled: true
          runAsUser: 1001
        args:
          - python
          - '-m'
          - core
        env:
          FLAG_CORE_HEALTHCHECK: 60
          FLAG_CORE_CHECK_SUBGRAPH_URLS: 600
          FLAG_CORE_GET_FUNDINGS: 900
          FLAG_CORE_AGGREGATE_PEERS: 300
          FLAG_CORE_GET_TOPOLOGY_DATA: 300
          FLAG_CORE_GET_SUBGRAPH_DATA: 300
          FLAG_CORE_APPLY_ECONOMIC_MODEL: 300

          FLAG_NODE_HEALTHCHECK: 60
          FLAG_NODE_RETRIEVE_PEERS: 60
          FLAG_NODE_RETRIEVE_OUTGOING_CHANNELS: 60
          FLAG_NODE_RETRIEVE_INCOMING_CHANNELS: 60
          FLAG_NODE_RETRIEVE_BALANCES: 60
          FLAG_NODE_OPEN_CHANNELS: 300
          FLAG_NODE_CLOSE_OLD_CHANNELS: 300
          FLAG_NODE_CLOSE_PENDING_CHANNELS: 300
          FLAG_NODE_FUND_CHANNELS: 300
          FLAG_NODE_GET_TOTAL_CHANNEL_FUNDS: 600

          DISTRIBUTION_MIN_ELIGIBLE_PEERS: 5

          GCP_FILE_PREFIX: expected_reward
          GCP_FOLDER: refactored_app
          GCP_BUCKET: ct-platform-ct

          ECONOMIC_MODEL_FILENAME: parameters-staging.json

          CHANNEL_MIN_BALANCE: 0.05
          CHANNEL_FUNDING_AMOUNT: 0.2
          CHANNEL_MAX_AGE_SECONDS: 172800

          RABBITMQ_TASK_NAME: fake_task
          RABBITMQ_PROJECT_NAME: ct-app

          SUBGRAPH_PAGINATION_SIZE: 1000
          SUBGRAPH_SAFES_BALANCE_QUERY: "query SafeNodeBalance($first: Int, $skip: Int) { safes(first: $first, skip: $skip) { registeredNodesInNetworkRegistry { node { id } safe { id balance { wxHoprBalance } } } } }"
          SUBGRAPH_WXHOPR_TXS_QUERY: "{transactions(where: {from: $from, to: $to}) {from to amount}}"
          SUBGRAPH_FROM_ADDRESS: 0xd9a00176cf49dfb9ca3ef61805a2850f45cb1d05

        envFrom:
        - secretRef:
            name: hoprd-nodes
        - secretRef:
            name: subgraph
        service:
          type: ClusterIP
          ports:
            http: 8080
  destination:
    server: https://kubernetes.default.svc
    namespace: staging
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - CreateNamespace=true
      - PruneLast=true
      
